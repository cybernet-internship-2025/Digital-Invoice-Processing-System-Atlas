<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="az.cybernet.invoice.mapper.InvoiceMapper">

    <insert id="insertInvoice" parameterType="az.cybernet.invoice.entity.Invoice">
        INSERT INTO invoice.invoice ("id", "series", "invoice_number", "sender_id", "customer_id", "status", "total", "created_at", "updated_at", "comment")
        VALUES (#{id}, #{series}, #{invoiceNumber}, #{senderId}, #{customerId}, #{status}, #{total}, #{createdAt}, #{updatedAt}, #{comment})
    </insert>

    <select id="sendBackForCorrection" resultType="az.cybernet.invoice.entity.Invoice">
        WITH cancelled AS (
            UPDATE invoice.invoice
                SET status = 'CHANGES_REQUESTED',
                    comment = #{comment},
                    updated_at = #{updatedAt}
                WHERE id = #{id}
                RETURNING *
        )
        SELECT * FROM cancelled
    </select>

    <select id="getLastInvoiceNumberOfMonth" resultType="int" parameterType="map">
        <![CDATA[
        SELECT MAX(invoice_number)
        FROM invoice.invoice
        WHERE created_at >= #{startOfMonth} AND created_at < #{startOfNextMonth}
        ]]>
    </select>

    <select id="cancelInvoice" parameterType="java.util.UUID" resultType="az.cybernet.invoice.entity.Invoice">
        WITH cancelled AS (
            UPDATE invoice.invoice
                SET status = 'CANCELLED'
                WHERE id = #{id}
                RETURNING * )
        SELECT * FROM cancelled
    </select>

    <select id="updateInvoice" resultType="az.cybernet.invoice.entity.Invoice">
        WITH updated AS (
        UPDATE invoice.invoice
            SET
            <if test="status != null">
                status = #{status},
            </if>
            comment = #{comment},
            total = #{total},
            updated_at = #{updatedAt}
        WHERE id = #{id}
        RETURNING * )
        SELECT * FROM updated
    </select>

    <resultMap id="InvoiceDetailedResultMap" type="az.cybernet.invoice.entity.InvoiceDetailed">
        <id property="id" column="invoice_id"/>
        <result property="series" column="series"/>
        <result property="invoiceNumber" column="invoice_number"/>
        <result property="senderId" column="sender_id"/>
        <result property="customerId" column="customer_id"/>
        <result property="status" column="status"/>
        <result property="total" column="total"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="comment" column="comment"/>

        <collection property="products" ofType="az.cybernet.invoice.dto.response.ProductDetailResponse">
            <result property="productName" column="product_name"/>
            <result property="quantity" column="quantity"/>
            <result property="price" column="price"/>
            <result property="measurementName" column="measurement_name"/>
        </collection>
    </resultMap>

    <select id="getDetailedInvoice" resultMap="InvoiceDetailedResultMap">
        SELECT
            i.id as invoice_id,
            i.series,
            i.invoice_number,
            i.sender_id,
            i.customer_id,
            i.status,
            i.total,
            i.created_at,
            i.updated_at,
            i.comment,

            ip.product_id,
            ip.quantity,

            p.name as product_name,
            p.price,
            m.name as measurement_name

        FROM invoice.invoice i
                 LEFT JOIN invoice.invoice_product ip ON i.id = ip.invoice_id
                 LEFT JOIN invoice.product p ON ip.product_id = p.id
                 LEFT JOIN invoice.measurement m ON p.measurement_id = m.id
        WHERE i.id = #{invoiceId}
    </select>

</mapper>